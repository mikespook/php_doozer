/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_msg_2eproto__INCLUDED
#define PROTOBUF_C_msg_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Doozer__Request Doozer__Request;
typedef struct _Doozer__Response Doozer__Response;


/* --- enums --- */

typedef enum _Doozer__Request__Verb {
  DOOZER__REQUEST__VERB__GET = 1,
  DOOZER__REQUEST__VERB__SET = 2,
  DOOZER__REQUEST__VERB__DEL = 3,
  DOOZER__REQUEST__VERB__REV = 5,
  DOOZER__REQUEST__VERB__WAIT = 6,
  DOOZER__REQUEST__VERB__NOP = 7,
  DOOZER__REQUEST__VERB__WALK = 9,
  DOOZER__REQUEST__VERB__GETDIR = 14,
  DOOZER__REQUEST__VERB__STAT = 16,
  DOOZER__REQUEST__VERB__ACCESS = 99
} Doozer__Request__Verb;
typedef enum _Doozer__Response__Err {
  DOOZER__RESPONSE__ERR__OTHER = 127,
  DOOZER__RESPONSE__ERR__TAG_IN_USE = 1,
  DOOZER__RESPONSE__ERR__UNKNOWN_VERB = 2,
  DOOZER__RESPONSE__ERR__READONLY = 3,
  DOOZER__RESPONSE__ERR__TOO_LATE = 4,
  DOOZER__RESPONSE__ERR__REV_MISMATCH = 5,
  DOOZER__RESPONSE__ERR__BAD_PATH = 6,
  DOOZER__RESPONSE__ERR__MISSING_ARG = 7,
  DOOZER__RESPONSE__ERR__RANGE = 8,
  DOOZER__RESPONSE__ERR__NOTDIR = 20,
  DOOZER__RESPONSE__ERR__ISDIR = 21,
  DOOZER__RESPONSE__ERR__NOENT = 22
} Doozer__Response__Err;

/* --- messages --- */

struct  _Doozer__Request
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tag;
  int32_t tag;
  protobuf_c_boolean has_verb;
  Doozer__Request__Verb verb;
  char *path;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
  protobuf_c_boolean has_other_tag;
  int32_t other_tag;
  protobuf_c_boolean has_offset;
  int32_t offset;
  protobuf_c_boolean has_rev;
  int64_t rev;
};
#define DOOZER__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&doozer__request__descriptor) \
    , 0,0, 0,0, NULL, 0,{0,NULL}, 0,0, 0,0, 0,0 }


struct  _Doozer__Response
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tag;
  int32_t tag;
  protobuf_c_boolean has_flags;
  int32_t flags;
  protobuf_c_boolean has_rev;
  int64_t rev;
  char *path;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
  protobuf_c_boolean has_len;
  int32_t len;
  protobuf_c_boolean has_err_code;
  Doozer__Response__Err err_code;
  char *err_detail;
};
#define DOOZER__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&doozer__response__descriptor) \
    , 0,0, 0,0, 0,0, NULL, 0,{0,NULL}, 0,0, 0,0, NULL }


/* Doozer__Request methods */
void   doozer__request__init
                     (Doozer__Request         *message);
size_t doozer__request__get_packed_size
                     (const Doozer__Request   *message);
size_t doozer__request__pack
                     (const Doozer__Request   *message,
                      uint8_t             *out);
size_t doozer__request__pack_to_buffer
                     (const Doozer__Request   *message,
                      ProtobufCBuffer     *buffer);
Doozer__Request *
       doozer__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   doozer__request__free_unpacked
                     (Doozer__Request *message,
                      ProtobufCAllocator *allocator);
/* Doozer__Response methods */
void   doozer__response__init
                     (Doozer__Response         *message);
size_t doozer__response__get_packed_size
                     (const Doozer__Response   *message);
size_t doozer__response__pack
                     (const Doozer__Response   *message,
                      uint8_t             *out);
size_t doozer__response__pack_to_buffer
                     (const Doozer__Response   *message,
                      ProtobufCBuffer     *buffer);
Doozer__Response *
       doozer__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   doozer__response__free_unpacked
                     (Doozer__Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Doozer__Request_Closure)
                 (const Doozer__Request *message,
                  void *closure_data);
typedef void (*Doozer__Response_Closure)
                 (const Doozer__Response *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor doozer__request__descriptor;
extern const ProtobufCEnumDescriptor    doozer__request__verb__descriptor;
extern const ProtobufCMessageDescriptor doozer__response__descriptor;
extern const ProtobufCEnumDescriptor    doozer__response__err__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_msg_2eproto__INCLUDED */
